name: Monorepo cleanup (delete path + stop Jekyll)

on:
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Configure git identity
        run: |
          git config user.name  "monorepo-cleanup-bot"
          git config user.email "actions@users.noreply.github.com"

      - name: Remove vendor/llama.cpp and add .nojekyll
        shell: bash
        run: |
          set -euo pipefail

          # 1) Delete the directory (ignore if missing)
          TARGET_PATH="apps/llama-cpp-python/vendor/llama.cpp"
          if [ -e "$TARGET_PATH" ]; then
            echo "Deleting $TARGET_PATH ..."
            git rm -r -f "$TARGET_PATH"
          else
            echo "Path not found (skipping): $TARGET_PATH"
          fi

          # 2) Add `.nojekyll` to stop Pages from using Jekyll
          # (safe to run multiple times)
          if [ ! -f ".nojekyll" ]; then
            echo "Creating .nojekyll at repository root"
            touch .nojekyll
            git add .nojekyll
          else
            echo ".nojekyll already present"
          fi

          # 3) Disable any Action workflows that look like Jekyll
          mkdir -p .github/workflows/disabled
          shopt -s nullglob
          moved_any=false
          for f in .github/workflows/*jekyll*.yml .github/workflows/*jekyll*.yaml; do
            base="$(basename "$f")"
            echo "Disabling workflow: $base"
            git mv "$f" ".github/workflows/disabled/${base}.disabled"
            moved_any=true
          done
          $moved_any || echo "No Jekyll workflow files found."

          # Commit only if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "chore: remove vendor/llama.cpp, add .nojekyll, disable Jekyll workflows"
          else
            echo "No changes to commit."
          fi

      - name: Push to main
        run: git push origin main

